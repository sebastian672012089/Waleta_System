package waleta_system.Finance;

import waleta_system.Class.Utility;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import waleta_system.Class.ColumnsAutoSizer;


public class JDialog_NewEdit_Neraca extends javax.swing.JDialog {

     
    String sql = null;
    ResultSet rs;
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    String operand = null;

    public JDialog_NewEdit_Neraca(java.awt.Frame parent, boolean modal, String operand, String month, int year) {
        super(parent, modal);
        initComponents();
        this.setResizable(false);
        this.operand = operand;
        try {
            
            if (operand.equals("new")) {
                label_title.setText("Tambah Data Neraca");
                refreshTabel();
            } else if (operand.equals("edit")) {
                label_title.setText("Edit Data Neraca");
                DefaultTableModel model = (DefaultTableModel) Table_Input.getModel();
                model.setRowCount(0);
                sql = "SELECT `no`, `bulan`, `kategori`, `deskripsi`, `nilai` "
                        + "FROM `tb_neraca` WHERE MONTHNAME(`bulan`) = '" + month + "' AND YEAR(`bulan`) = '" + year + "'";
                rs = Utility.db.getStatement().executeQuery(sql);
                while (rs.next()) {
                    jDateChooser1.setDate(rs.getDate("bulan"));
                    model.addRow(new Object[]{rs.getString("no"), rs.getString("kategori"), rs.getString("deskripsi"), rs.getLong("nilai")});
                }
                ColumnsAutoSizer.sizeColumnsToFit(Table_Input);
            }
        } catch (Exception ex) {
            Logger.getLogger(JDialog_NewEdit_Neraca.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void refreshTabel() {
        try {
            DefaultTableModel model = (DefaultTableModel) Table_Input.getModel();
            model.setRowCount(0);
            sql = "SELECT `kategori`, `deskripsi` FROM `tb_neraca` WHERE 1 GROUP BY `deskripsi`";
            rs = Utility.db.getStatement().executeQuery(sql);
            int no = 0;
            while (rs.next()) {
                no++;
                model.addRow(new Object[]{no, rs.getString("kategori"), rs.getString("deskripsi"), null});
            }
            ColumnsAutoSizer.sizeColumnsToFit(Table_Input);
        } catch (SQLException e) {
            Logger.getLogger(JDialog_NewEdit_Neraca.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        label_title = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        button_save = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table_Input = new javax.swing.JTable();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Neraca Keuangan");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        label_title.setBackground(new java.awt.Color(255, 255, 255));
        label_title.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        label_title.setText("Tambah Data Pengeluaran");

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText("Data Bulan :");

        button_save.setBackground(new java.awt.Color(255, 255, 255));
        button_save.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        button_save.setText("Save");
        button_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_saveActionPerformed(evt);
            }
        });

        Table_Input.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Kategori", "Deskripsi", "Nilai"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Table_Input.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(Table_Input);

        jDateChooser1.setBackground(new java.awt.Color(255, 255, 255));
        jDateChooser1.setDateFormatString("dd MMMM yyyy");
        jDateChooser1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 680, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(label_title)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button_save)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label_title, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_save, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_saveActionPerformed
        // TODO add your handling code here:
        try {
            int count = 0;
            Utility.db.getConnection().setAutoCommit(false);
            for (int i = 0; i < Table_Input.getRowCount(); i++) {
                long nilai = Long.valueOf(Table_Input.getValueAt(i, 3).toString());
                if (operand.equals("new")) {
                    sql = "INSERT INTO `tb_neraca`(`bulan`, `kategori`, `deskripsi`, `nilai`) "
                            + "VALUES ('" + new SimpleDateFormat("yyyy-MM-dd").format(jDateChooser1.getDate()) + "','" + Table_Input.getValueAt(i, 1).toString() + "','" + Table_Input.getValueAt(i, 2).toString() + "'," + nilai + ")";
                } else if (operand.equals("edit")) {
                    sql = "UPDATE `tb_neraca` SET "
                            + "`bulan`='" + new SimpleDateFormat("yyyy-MM-dd").format(jDateChooser1.getDate()) + "',"
                            + "`nilai`=" + nilai + " "
                            + "WHERE `no`='" + Table_Input.getValueAt(i, 0).toString() + "'";
                }
                Utility.db.getConnection().createStatement();
                if ((Utility.db.getStatement().executeUpdate(sql)) == 1) {
                    count++;
                }
            }
            Utility.db.getConnection().commit();
            this.dispose();
            JOptionPane.showMessageDialog(this, "Data Berhasil simpan : " + count);
        } catch (SQLException | NumberFormatException ex) {
            try {
                Utility.db.getConnection().rollback();
            } catch (SQLException e) {
                Logger.getLogger(JDialog_NewEdit_Neraca.class.getName()).log(Level.SEVERE, null, e);
            }
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(JDialog_NewEdit_Neraca.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                Utility.db.getConnection().setAutoCommit(true);
            } catch (SQLException ex) {
                Logger.getLogger(JDialog_NewEdit_Neraca.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_button_saveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table_Input;
    private javax.swing.JButton button_save;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label_title;
    // End of variables declaration//GEN-END:variables
}
