package waleta_system.Maintenance;

import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;
import waleta_system.Class.ColumnsAutoSizer;
import waleta_system.Class.Utility;
import waleta_system.Class.ExportToExcel;

public class JPanel_Data_Aset extends javax.swing.JPanel {

    private String sql = null;
    ResultSet rs;
    Date date = new Date();
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    DefaultTableCellRenderer TableAlignment = new DefaultTableCellRenderer();

    public JPanel_Data_Aset() {
        initComponents();
    }

    public void init() {
        refreshTable();
    }

    public void refreshTable() {
        try {
            DefaultTableModel model = (DefaultTableModel) Table_aset_barang_maintenance.getModel();
            model.setRowCount(0);
            String filter_tanggal = "";
            if (DateFilter1.getDate() != null && DateFilter2.getDate() != null) {
                filter_tanggal = " AND `tb_inv_aset_stok`.`tgl_insert` BETWEEN '" + dateFormat.format(DateFilter1.getDate()) + "' AND '" + dateFormat.format(DateFilter2.getDate()) + "'";
            }
            sql = "SELECT `id_inv_aset_stok`, `tb_mt_ruangan`.`nama_ruangan`, `tb_inv_aset`.`nama_aset`, `detail`, `label`, `tb_inv_aset_stok`.`tgl_insert`, `tb_inv_aset_stok`.`id_login_insert`, `tb_inv_aset_stok`.`tgl_edit`, `tb_inv_aset_stok`.`id_login_edit` \n"
                    + "FROM `tb_inv_aset_stok`  \n"
                    + "LEFT JOIN `tb_mt_ruangan` ON `tb_inv_aset_stok`.`id_mt_ruangan` = `tb_mt_ruangan`.`id_mt_ruangan`\n"
                    + "LEFT JOIN `tb_inv_aset` ON `tb_inv_aset_stok`.`id_inv_aset` = `tb_inv_aset`.`id_inv_aset`\n"
                    + "WHERE `tb_inv_aset`.`nama_aset` LIKE '%" + txt_search_nama_barang.getText() + "%' " + filter_tanggal;
            rs = Utility.db.getStatement().executeQuery(sql);
            Object[] row = new Object[15];
            while (rs.next()) {
                row[0] = rs.getString("id_inv_aset_stok");
                row[1] = rs.getString("nama_aset");
                row[2] = rs.getDate("tgl_insert");
                row[3] = rs.getString("nama_ruangan");
                row[4] = rs.getString("detail");
                row[5] = rs.getString("label");
                row[6] = rs.getString("id_login_insert");
                row[7] = rs.getDate("tgl_edit");
                row[8] = rs.getString("id_login_edit");
                model.addRow(row);
            }
            ColumnsAutoSizer.sizeColumnsToFit(Table_aset_barang_maintenance);
            int rowData = Table_aset_barang_maintenance.getRowCount();
            label_total_data.setText(Integer.toString(rowData));

            TableAlignment.setHorizontalAlignment(JLabel.CENTER);
            for (int i = 0; i < Table_aset_barang_maintenance.getColumnCount(); i++) {
                Table_aset_barang_maintenance.getColumnModel().getColumn(i).setCellRenderer(TableAlignment);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(JPanel_Data_Aset.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel_Customer_baku = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        Table_aset_barang_maintenance = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        label_total_data = new javax.swing.JLabel();
        txt_search_nama_barang = new javax.swing.JTextField();
        button_search = new javax.swing.JButton();
        button_export_customer = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        DateFilter1 = new com.toedter.calendar.JDateChooser();
        DateFilter2 = new com.toedter.calendar.JDateChooser();
        button_print_semua = new javax.swing.JButton();
        button_print_1 = new javax.swing.JButton();

        jPanel_Customer_baku.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_Customer_baku.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Data Aset Barang Maintenance", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N
        jPanel_Customer_baku.setPreferredSize(new java.awt.Dimension(1366, 701));

        Table_aset_barang_maintenance.setAutoCreateRowSorter(true);
        Table_aset_barang_maintenance.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Barang", "Nama Barang", "Tanggal", "Ruangan", "Detail", "Label"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Table_aset_barang_maintenance.getTableHeader().setReorderingAllowed(false);
        jScrollPane8.setViewportView(Table_aset_barang_maintenance);

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel12.setText("Total Data :");

        label_total_data.setBackground(new java.awt.Color(255, 255, 255));
        label_total_data.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        label_total_data.setText("TOTAL");

        txt_search_nama_barang.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        txt_search_nama_barang.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_search_nama_barangKeyPressed(evt);
            }
        });

        button_search.setBackground(new java.awt.Color(255, 255, 255));
        button_search.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        button_search.setText("Search");
        button_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_searchActionPerformed(evt);
            }
        });

        button_export_customer.setBackground(new java.awt.Color(255, 255, 255));
        button_export_customer.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        button_export_customer.setText("Export To Excel");
        button_export_customer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_export_customerActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel1.setText("Cari Nama Barang :");

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel2.setText("Tanggal : ");

        DateFilter1.setBackground(new java.awt.Color(255, 255, 255));
        DateFilter1.setDateFormatString("dd MMM yyyy");
        DateFilter1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        DateFilter2.setBackground(new java.awt.Color(255, 255, 255));
        DateFilter2.setDate(new Date());
        DateFilter2.setDateFormatString("dd MMM yyyy");
        DateFilter2.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        button_print_semua.setBackground(new java.awt.Color(255, 255, 255));
        button_print_semua.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        button_print_semua.setText("Print Semua Label");
        button_print_semua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_print_semuaActionPerformed(evt);
            }
        });

        button_print_1.setBackground(new java.awt.Color(255, 255, 255));
        button_print_1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        button_print_1.setText("Print 1 Label");
        button_print_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_print_1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_Customer_bakuLayout = new javax.swing.GroupLayout(jPanel_Customer_baku);
        jPanel_Customer_baku.setLayout(jPanel_Customer_bakuLayout);
        jPanel_Customer_bakuLayout.setHorizontalGroup(
            jPanel_Customer_bakuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_Customer_bakuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_Customer_bakuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 1334, Short.MAX_VALUE)
                    .addGroup(jPanel_Customer_bakuLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_search_nama_barang, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DateFilter1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DateFilter2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button_search)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label_total_data)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(button_print_1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button_print_semua)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button_export_customer)))
                .addContainerGap())
        );
        jPanel_Customer_bakuLayout.setVerticalGroup(
            jPanel_Customer_bakuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_Customer_bakuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_Customer_bakuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_export_customer, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_search, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_search_nama_barang, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_total_data, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DateFilter2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DateFilter1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_print_semua, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_print_1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 605, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel_Customer_baku, javax.swing.GroupLayout.DEFAULT_SIZE, 1364, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel_Customer_baku, javax.swing.GroupLayout.DEFAULT_SIZE, 677, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txt_search_nama_barangKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_search_nama_barangKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            refreshTable();
        }
    }//GEN-LAST:event_txt_search_nama_barangKeyPressed

    private void button_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_searchActionPerformed
        // TODO add your handling code here:
        refreshTable();
    }//GEN-LAST:event_button_searchActionPerformed

    private void button_export_customerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_export_customerActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) Table_aset_barang_maintenance.getModel();
        ExportToExcel.writeToExcel(model, this);
    }//GEN-LAST:event_button_export_customerActionPerformed

    private void button_print_semuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_print_semuaActionPerformed
        // TODO add your handling code here:
        try {
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            JasperDesign JASP_DESIGN = JRXmlLoader.load("Report\\Label_Aset.jrxml");
            JASP_DESIGN.setQuery(newQuery);
            Map<String, Object> map = new HashMap<>();
            JasperReport JASP_REP = JasperCompileManager.compileReport(JASP_DESIGN);
            JasperPrint JASP_PRINT = JasperFillManager.fillReport(JASP_REP, null, Utility.db.getConnection());
            JasperViewer.viewReport(JASP_PRINT, false);//isExitOnClose (false)
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(JPanel_Data_Aset.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_button_print_semuaActionPerformed

    private void button_print_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_print_1ActionPerformed
        // TODO add your handling code here:
        int x = Table_aset_barang_maintenance.getSelectedRow();
        if (x < 0) {
            JOptionPane.showMessageDialog(this, "Pilih salah satu data LP yang akan di setor !");
        } else {
            try {
                String kode = Table_aset_barang_maintenance.getValueAt(x, 0).toString();
                String Query = "SELECT `id_inv_aset_stok`, `tb_mt_ruangan`.`nama_ruangan`, `tb_inv_aset`.`nama_aset`, `detail`, `label`, `tb_inv_aset_stok`.`tgl_insert`, `tb_inv_aset_stok`.`id_login_insert`, `tb_inv_aset_stok`.`tgl_edit`, `tb_inv_aset_stok`.`id_login_edit` \n"
                        + "FROM `tb_inv_aset_stok`  \n"
                        + "LEFT JOIN `tb_mt_ruangan` ON `tb_inv_aset_stok`.`id_mt_ruangan` = `tb_mt_ruangan`.`id_mt_ruangan`\n"
                        + "LEFT JOIN `tb_inv_aset` ON `tb_inv_aset_stok`.`id_inv_aset` = `tb_inv_aset`.`id_inv_aset`\n"
                        + "WHERE `id_inv_aset_stok` = '" + kode + "' ";
                JRDesignQuery newQuery = new JRDesignQuery();
                newQuery.setText(Query);
                JasperDesign JASP_DESIGN = JRXmlLoader.load("Report\\Label_Aset.jrxml");
                JASP_DESIGN.setQuery(newQuery);
                JasperReport JASP_REP = JasperCompileManager.compileReport(JASP_DESIGN);
                JasperPrint JASP_PRINT = JasperFillManager.fillReport(JASP_REP, null, Utility.db.getConnection());
                JasperViewer.viewReport(JASP_PRINT, false);//isExitOnClose (false)
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
                Logger.getLogger(JPanel_Data_Aset.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_button_print_1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser DateFilter1;
    private com.toedter.calendar.JDateChooser DateFilter2;
    private javax.swing.JTable Table_aset_barang_maintenance;
    private javax.swing.JButton button_export_customer;
    private javax.swing.JButton button_print_1;
    private javax.swing.JButton button_print_semua;
    private javax.swing.JButton button_search;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel_Customer_baku;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JLabel label_total_data;
    private javax.swing.JTextField txt_search_nama_barang;
    // End of variables declaration//GEN-END:variables
}
