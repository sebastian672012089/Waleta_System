package waleta_system.SubWaleta;

import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import waleta_system.Class.Utility;

public class JDialog_List_bagian_sub extends javax.swing.JDialog {

    String sql = null;
    ResultSet rs;
    DefaultTableCellRenderer TableAlignment = new DefaultTableCellRenderer();

    public JDialog_List_bagian_sub(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        refreshTable();
    }

    public void refreshTable() {
        try {
            Utility.db_sub.connect();
            DefaultTableModel model = (DefaultTableModel) table_bagian.getModel();
            model.setRowCount(0);
            sql = "SELECT `bagian` FROM `tb_bagian` WHERE 1";
            rs = Utility.db_sub.getStatement().executeQuery(sql);
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString("bagian")});
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(JDialog_List_bagian_sub.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_bagian = new javax.swing.JTable();
        button_close = new javax.swing.JButton();
        button_new = new javax.swing.JButton();
        button_delete = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Data Online");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "BAGIAN SUB", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N

        table_bagian.setAutoCreateRowSorter(true);
        table_bagian.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        table_bagian.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Bagian"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_bagian.setRowHeight(20);
        table_bagian.getTableHeader().setReorderingAllowed(false);
        table_bagian.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                table_bagianMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(table_bagian);

        button_close.setBackground(new java.awt.Color(255, 255, 255));
        button_close.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        button_close.setText("Close");
        button_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_closeActionPerformed(evt);
            }
        });

        button_new.setBackground(new java.awt.Color(255, 255, 255));
        button_new.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        button_new.setText("New");
        button_new.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_newActionPerformed(evt);
            }
        });

        button_delete.setBackground(new java.awt.Color(255, 255, 255));
        button_delete.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        button_delete.setText("Delete");
        button_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_deleteActionPerformed(evt);
            }
        });

        jLabel1.setText("Note : Klik 2x pada tabel untuk edit.");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(button_new)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button_delete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button_close)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button_new)
                    .addComponent(button_delete)
                    .addComponent(button_close))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void table_bagianMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_bagianMousePressed
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            Boolean Check = true;
            try {
                Utility.db_sub.connect();
                String bagian_lama = table_bagian.getValueAt(table_bagian.getSelectedRow(), 0).toString();
                String bagian_baru = JOptionPane.showInputDialog(this, "Nama Bagian : ", bagian_lama);
                if (bagian_baru == null || bagian_baru.equals("")) {
                    Check = false;
                } else {
                    sql = "SELECT `bagian` FROM `tb_bagian` WHERE `bagian` = '" + bagian_baru + "'";
                    rs = Utility.db_sub.getStatement().executeQuery(sql);
                    if (rs.next()) {
                        Check = false;
                        JOptionPane.showMessageDialog(this, "Nama bagian " + bagian_baru + " sudah ada!");
                    }
                }
                if (Check) {
                    String query = "UPDATE `tb_bagian` SET `bagian`='" + bagian_baru + "' WHERE `bagian`='" + bagian_lama + "'";
                    Utility.db_sub.getConnection().createStatement();
                    if ((Utility.db_sub.getStatement().executeUpdate(query)) == 1) {
                        JOptionPane.showMessageDialog(this, "edit data online sukses");
                        refreshTable();
                    } else {
                        JOptionPane.showMessageDialog(this, "FAILED!");
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
                Logger.getLogger(JDialog_List_bagian_sub.class.getName()).log(Level.SEVERE, null, e);
            }
        }
    }//GEN-LAST:event_table_bagianMousePressed

    private void button_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_closeActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_button_closeActionPerformed

    private void button_newActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_newActionPerformed
        // TODO add your handling code here:
        Boolean Check = true;
        try {
            Utility.db_sub.connect();
            String bagian_baru = JOptionPane.showInputDialog("Silahkan masukkan ");
            if (bagian_baru == null || bagian_baru.equals("")) {
                Check = false;
            } else {
                sql = "SELECT `bagian` FROM `tb_bagian` WHERE `bagian` = '" + bagian_baru + "'";
                rs = Utility.db_sub.getStatement().executeQuery(sql);
                if (rs.next()) {
                    Check = false;
                    JOptionPane.showMessageDialog(this, "Nama bagian " + bagian_baru + " sudah ada!");
                }
            }
            if (Check) {
                String query = "INSERT INTO `tb_bagian`(`bagian`) VALUES ('" + bagian_baru + "')";
                Utility.db_sub.getConnection().createStatement();
                if ((Utility.db_sub.getStatement().executeUpdate(query)) == 1) {
                    JOptionPane.showMessageDialog(this, "tambah bagian baru sub online sukses");
                    refreshTable();
                } else {
                    JOptionPane.showMessageDialog(this, "FAILED!");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            Logger.getLogger(JDialog_List_bagian_sub.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_button_newActionPerformed

    private void button_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_deleteActionPerformed
        // TODO add your handling code here:
        try {
            int j = table_bagian.getSelectedRow();
            if (j == -1) {
                JOptionPane.showMessageDialog(this, "Silahkan pilih data yang mau di hapus !");
            } else {
                int dialogResult = JOptionPane.showConfirmDialog(this, "Hapus bagian " + table_bagian.getValueAt(j, 0).toString() + "?", "Warning", 0);
                if (dialogResult == JOptionPane.YES_OPTION) {
                    // delete code here
                    sql = "DELETE FROM `tb_bagian` WHERE `bagian` = '" + table_bagian.getValueAt(j, 0).toString() + "'";
                    Utility.db_sub.getConnection().createStatement();
                    if ((Utility.db_sub.getStatement().executeUpdate(sql)) == 1) {
                        JOptionPane.showMessageDialog(this, "hapus " + table_bagian.getValueAt(j, 0).toString() + " data online sukses");
                        refreshTable();
                    } else {
                        JOptionPane.showMessageDialog(this, "gagal hapus data online");
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            Logger.getLogger(JDialog_List_bagian_sub.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_button_deleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialog_List_bagian_sub.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialog_List_bagian_sub.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialog_List_bagian_sub.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialog_List_bagian_sub.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialog_List_bagian_sub dialog = new JDialog_List_bagian_sub(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton button_close;
    private javax.swing.JButton button_delete;
    private javax.swing.JButton button_new;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable table_bagian;
    // End of variables declaration//GEN-END:variables
}
